'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _map = require('lodash/map');

var _map2 = _interopRequireDefault(_map);

var _min = require('lodash/min');

var _min2 = _interopRequireDefault(_min);

var _max = require('lodash/max');

var _max2 = _interopRequireDefault(_max);

var _flatten = require('lodash/flatten');

var _flatten2 = _interopRequireDefault(_flatten);

var _leaflet = require('leaflet');

var _leaflet2 = _interopRequireDefault(_leaflet);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getCoords = function getCoords(arr) {
  if (!arr || !arr.length) return [];
  if (arr.length === 2 && typeof arr[1] === 'number') return [arr];
  if (arr[0].length && typeof arr[0][1] === 'number') return arr;
  if (arr[0][0].length && typeof arr[0][0][1] === 'number') return getCoords((0, _flatten2.default)(arr));
  if (arr[0][0][0].length && typeof arr[0][0][0][1] === 'number') return getCoords((0, _flatten2.default)(arr));
  return arr;
};

var getBounds = function getBounds(polygons, points) {
  if (polygons.length === 0 && points.length === 0) return [35, -83];
  var coords = [];
  (0, _map2.default)(polygons, function (poly) {
    coords = coords.concat(getCoords(poly.geometry.coordinates));
  });
  (0, _map2.default)(points, function (point) {
    if (point.properties && point.properties.bounds) {
      var b = point.properties.bounds;
      var p1 = [b._southWest.lng, b._southWest.lat];
      var p2 = [b._northEast.lng, b._northEast.lat];
      coords.push(p1);
      coords.push(p2);
    } else coords.push(point.geometry.coordinates);
  });
  var lats = [];
  var longs = [];
  (0, _map2.default)(coords, function (coord) {
    lats.push(coord[1]);
    longs.push(coord[0]);
  });
  var c1 = _leaflet2.default.latLng((0, _max2.default)(lats), (0, _max2.default)(longs));
  var c2 = _leaflet2.default.latLng((0, _min2.default)(lats), (0, _min2.default)(longs));
  return _leaflet2.default.latLngBounds(c1, c2);
};

exports.default = getBounds;