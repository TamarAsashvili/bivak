'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _uuid = require('uuid');

var _uuid2 = _interopRequireDefault(_uuid);

var _map = require('lodash/map');

var _map2 = _interopRequireDefault(_map);

var _cloneDeep = require('lodash/cloneDeep');

var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

var _reverse = require('lodash/reverse');

var _reverse2 = _interopRequireDefault(_reverse);

var _reactLeaflet = require('react-leaflet');

var _reactLeafletMarkercluster = require('react-leaflet-markercluster');

var _reactLeafletMarkercluster2 = _interopRequireDefault(_reactLeafletMarkercluster);

var _clickShape = require('./clickShape');

var _tooltipHelpers = require('./tooltipHelpers');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var points = function points(props) {
  var markers = (0, _map2.default)(props.points, function (result) {
    var p = result.properties;
    var position = (0, _cloneDeep2.default)(result.geometry.coordinates);
    (0, _reverse2.default)(position);
    return _react2.default.createElement(
      _reactLeaflet.Marker,
      {
        key: _uuid2.default.v4(),
        uuid: p.key || _uuid2.default.v4(),
        position: position,
        icon: props.markerIcon,
        onClick: _clickShape.clickPoint.bind(undefined, props)
      },
      _react2.default.createElement(
        _reactLeaflet.Tooltip,
        { className: (0, _tooltipHelpers.tooltipClass)(props.tooltipOptions) },
        _react2.default.createElement(
          'span',
          null,
          props.edit && props.remove ? 'CLICK TO DELETE' : '' + (0, _tooltipHelpers.pointsTooltip)(result, props.tooltipOptions)
        )
      )
    );
  });
  if (props.cluster) {
    return _react2.default.createElement(
      _reactLeafletMarkercluster2.default,
      null,
      markers
    );
  }
  return markers;
};

exports.default = points;