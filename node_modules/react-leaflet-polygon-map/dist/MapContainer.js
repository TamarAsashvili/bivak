'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _omit = require('lodash/omit');

var _omit2 = _interopRequireDefault(_omit);

var _each = require('lodash/each');

var _each2 = _interopRequireDefault(_each);

var _noop = require('lodash/noop');

var _noop2 = _interopRequireDefault(_noop);

var _isEqual = require('lodash/isEqual');

var _isEqual2 = _interopRequireDefault(_isEqual);

var _cloneDeep = require('lodash/cloneDeep');

var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

var _MapComponent = require('./MapComponent');

var _MapComponent2 = _interopRequireDefault(_MapComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var MapContainer = function (_React$Component) {
  _inherits(MapContainer, _React$Component);

  function MapContainer(props) {
    _classCallCheck(this, MapContainer);

    var _this = _possibleConstructorReturn(this, (MapContainer.__proto__ || Object.getPrototypeOf(MapContainer)).call(this, props));

    _this.state = {
      bindPoint: 'm',
      mapState: Object.assign({}, props),
      tileLayer: 'street'
    };
    _this.tileSwitcher = _this.tileSwitcher.bind(_this);
    return _this;
  }

  _createClass(MapContainer, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps, nextState) {
      if (!(0, _isEqual2.default)(nextProps.matches, this.props.matches) || !(0, _isEqual2.default)(nextProps.points, this.props.points) || !(0, _isEqual2.default)(nextProps.features, this.props.features) || !(0, _isEqual2.default)(nextProps.remove, this.props.remove) || !(0, _isEqual2.default)(nextProps.edit, this.props.edit) || !(0, _isEqual2.default)(nextProps.extraProps, this.props.extraProps) || !(0, _isEqual2.default)(nextProps.tileLayer, this.props.tileLayer) || this.state.tileLayer !== nextState.tileLayer) {
        return true;
      }
      if (!(0, _isEqual2.default)(this.state.bindPoint, nextState.bindPoint)) return true;
      return false;
    }
  }, {
    key: 'setBindPoint',
    value: function setBindPoint(m) {
      if (this.state.bindPoint === 'm') {
        this.setState({ bindPoint: m });
      }
    }
  }, {
    key: 'tileSwitcher',
    value: function tileSwitcher(value) {
      if (value === this.state.tileLayer) return;
      if (value !== this.state.tileLayer) this.setState({ tileLayer: value });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      if (this.props.edit) {
        var el = document.querySelector('a.leaflet-draw-edit-remove');
        if (!el) el = { onclick: '' };
        el.onclick = function () {
          var _p = (0, _cloneDeep2.default)(_this2.props);
          _p.remove = !_this2.props.remove;
          el.classname = 'leaflet-draw-edit-remove';
        };
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var extraProps = {};
      var tileLayer = void 0;
      if (this.state.tileLayer === 'street') {
        tileLayer = {
          name: this.state.tileLayer,
          url: 'https://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}',
          subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        };
      }
      if (this.state.tileLayer === 'sat') {
        tileLayer = {
          name: this.state.tileLayer,
          url: 'https://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}',
          subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
        };
      }
      (0, _each2.default)(this.props.extraProps, function (p) {
        extraProps[p] = _this3.props[p];
      });
      return _react2.default.createElement(_MapComponent2.default, Object.assign({}, (0, _cloneDeep2.default)((0, _omit2.default)(this.props, 'extraProps')), extraProps, {
        bindPoint: this.state.bindPoint,
        setBindPoint: this.setBindPoint.bind(this),
        tileLayer: tileLayer,
        tileSwitcher: this.tileSwitcher
      }));
    }
  }]);

  return MapContainer;
}(_react2.default.Component);

MapContainer.defaultProps = {
  onShapeChange: _noop2.default,
  validateFunc: _noop2.default
};

exports.default = MapContainer;