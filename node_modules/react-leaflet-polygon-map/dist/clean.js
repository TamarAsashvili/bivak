'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cleanPoint = exports.cleanPoly = undefined;

var _cloneDeep = require('lodash/cloneDeep');

var _cloneDeep2 = _interopRequireDefault(_cloneDeep);

var _uuid = require('uuid');

var _uuid2 = _interopRequireDefault(_uuid);

var _addArea = require('./addArea');

var _addArea2 = _interopRequireDefault(_addArea);

var _validateShape = require('./validateShape');

var _validateShape2 = _interopRequireDefault(_validateShape);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cleanPoly = exports.cleanPoly = function cleanPoly(poly, maxAreaEach, validateFunc) {
  var p = (0, _cloneDeep2.default)(poly);

  if (!p.properties) p.properties = {};
  // Add area
  if (!p.properties.area) p = (0, _addArea2.default)(p);

  // Check max area
  if (p.properties.area > maxAreaEach) p.properties.tooLarge = true;

  // Tag with id if not already tagged
  if (!p.properties.key) p.properties.key = _uuid2.default.v4();

  // Fix if 'Polygon' type
  if (p.geometry.type === 'Polygon') {
    p.geometry.type = 'MultiPolygon';
    p.geometry.coordinates = [poly.geometry.coordinates];
  }

  // Add errors if needed
  return (0, _validateShape2.default)(p, validateFunc);
};

var cleanPoint = exports.cleanPoint = function cleanPoint(point) {
  var p = (0, _cloneDeep2.default)(point);

  // Tag with id if not already tagged
  if (!p.properties.key) p.properties.key = _uuid2.default.v4();

  return p;
};