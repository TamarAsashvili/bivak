{"ast":null,"code":"import React from 'react';\nimport createReactContext from 'create-react-context';\nimport { createSelector } from 'reselect';\nimport { defaultTranslateOptions } from './localize';\nimport { localizeReducer, getTranslate, initialize, addTranslation, addTranslationForLanguage, setActiveLanguage, getLanguages, getActiveLanguage, getOptions } from './localize';\n\nvar dispatchInitialize = function dispatchInitialize(dispatch) {\n  return function (payload) {\n    return dispatch(initialize(payload));\n  };\n};\n\nvar dispatchAddTranslation = function dispatchAddTranslation(dispatch) {\n  return function (translation) {\n    return dispatch(addTranslation(translation));\n  };\n};\n\nvar dispatchAddTranslationForLanguage = function dispatchAddTranslationForLanguage(dispatch) {\n  return function (translation, language) {\n    return dispatch(addTranslationForLanguage(translation, language));\n  };\n};\n\nvar dispatchSetActiveLanguage = function dispatchSetActiveLanguage(dispatch) {\n  return function (languageCode) {\n    return dispatch(setActiveLanguage(languageCode));\n  };\n};\n\nexport var getContextPropsFromState = function getContextPropsFromState(dispatch) {\n  return createSelector(getTranslate, getLanguages, getActiveLanguage, getOptions, function (translate, languages, activeLanguage, options) {\n    var defaultLanguage = options.defaultLanguage || languages[0] && languages[0].code;\n    var renderToStaticMarkup = options.renderToStaticMarkup;\n    var ignoreTranslateChildren = options.ignoreTranslateChildren !== undefined ? options.ignoreTranslateChildren : defaultTranslateOptions.ignoreTranslateChildren;\n    return {\n      translate: translate,\n      languages: languages,\n      defaultLanguage: defaultLanguage,\n      activeLanguage: activeLanguage,\n      initialize: dispatchInitialize(dispatch),\n      addTranslation: dispatchAddTranslation(dispatch),\n      addTranslationForLanguage: dispatchAddTranslationForLanguage(dispatch),\n      setActiveLanguage: dispatchSetActiveLanguage(dispatch),\n      renderToStaticMarkup: renderToStaticMarkup,\n      ignoreTranslateChildren: ignoreTranslateChildren\n    };\n  });\n};\nvar defaultLocalizeState = localizeReducer(undefined, {});\nvar defaultContext = getContextPropsFromState(function () {})(defaultLocalizeState);\nexport var LocalizeContext = createReactContext(defaultContext);","map":{"version":3,"sources":["/home/mediamonster/Desktop/react_app/freenature/node_modules/react-localize-redux/es/LocalizeContext.js"],"names":["React","createReactContext","createSelector","defaultTranslateOptions","localizeReducer","getTranslate","initialize","addTranslation","addTranslationForLanguage","setActiveLanguage","getLanguages","getActiveLanguage","getOptions","dispatchInitialize","dispatch","payload","dispatchAddTranslation","translation","dispatchAddTranslationForLanguage","language","dispatchSetActiveLanguage","languageCode","getContextPropsFromState","translate","languages","activeLanguage","options","defaultLanguage","code","renderToStaticMarkup","ignoreTranslateChildren","undefined","defaultLocalizeState","defaultContext","LocalizeContext"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,uBAAT,QAAwC,YAAxC;AACA,SAASC,eAAT,EAA0BC,YAA1B,EAAwCC,UAAxC,EAAoDC,cAApD,EAAoEC,yBAApE,EAA+FC,iBAA/F,EAAkHC,YAAlH,EAAgIC,iBAAhI,EAAmJC,UAAnJ,QAAqK,YAArK;;AAEA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,QAA5B,EAAsC;AAC7D,SAAO,UAAUC,OAAV,EAAmB;AACxB,WAAOD,QAAQ,CAACR,UAAU,CAACS,OAAD,CAAX,CAAf;AACD,GAFD;AAGD,CAJD;;AAMA,IAAIC,sBAAsB,GAAG,SAASA,sBAAT,CAAgCF,QAAhC,EAA0C;AACrE,SAAO,UAAUG,WAAV,EAAuB;AAC5B,WAAOH,QAAQ,CAACP,cAAc,CAACU,WAAD,CAAf,CAAf;AACD,GAFD;AAGD,CAJD;;AAMA,IAAIC,iCAAiC,GAAG,SAASA,iCAAT,CAA2CJ,QAA3C,EAAqD;AAC3F,SAAO,UAAUG,WAAV,EAAuBE,QAAvB,EAAiC;AACtC,WAAOL,QAAQ,CAACN,yBAAyB,CAACS,WAAD,EAAcE,QAAd,CAA1B,CAAf;AACD,GAFD;AAGD,CAJD;;AAMA,IAAIC,yBAAyB,GAAG,SAASA,yBAAT,CAAmCN,QAAnC,EAA6C;AAC3E,SAAO,UAAUO,YAAV,EAAwB;AAC7B,WAAOP,QAAQ,CAACL,iBAAiB,CAACY,YAAD,CAAlB,CAAf;AACD,GAFD;AAGD,CAJD;;AAMA,OAAO,IAAIC,wBAAwB,GAAG,SAASA,wBAAT,CAAkCR,QAAlC,EAA4C;AAChF,SAAOZ,cAAc,CAACG,YAAD,EAAeK,YAAf,EAA6BC,iBAA7B,EAAgDC,UAAhD,EAA4D,UAAUW,SAAV,EAAqBC,SAArB,EAAgCC,cAAhC,EAAgDC,OAAhD,EAAyD;AACxI,QAAIC,eAAe,GAAGD,OAAO,CAACC,eAAR,IAA2BH,SAAS,CAAC,CAAD,CAAT,IAAgBA,SAAS,CAAC,CAAD,CAAT,CAAaI,IAA9E;AACA,QAAIC,oBAAoB,GAAGH,OAAO,CAACG,oBAAnC;AACA,QAAIC,uBAAuB,GAAGJ,OAAO,CAACI,uBAAR,KAAoCC,SAApC,GAAgDL,OAAO,CAACI,uBAAxD,GAAkF3B,uBAAuB,CAAC2B,uBAAxI;AAEA,WAAO;AACLP,MAAAA,SAAS,EAAEA,SADN;AAELC,MAAAA,SAAS,EAAEA,SAFN;AAGLG,MAAAA,eAAe,EAAEA,eAHZ;AAILF,MAAAA,cAAc,EAAEA,cAJX;AAKLnB,MAAAA,UAAU,EAAEO,kBAAkB,CAACC,QAAD,CALzB;AAMLP,MAAAA,cAAc,EAAES,sBAAsB,CAACF,QAAD,CANjC;AAOLN,MAAAA,yBAAyB,EAAEU,iCAAiC,CAACJ,QAAD,CAPvD;AAQLL,MAAAA,iBAAiB,EAAEW,yBAAyB,CAACN,QAAD,CARvC;AASLe,MAAAA,oBAAoB,EAAEA,oBATjB;AAULC,MAAAA,uBAAuB,EAAEA;AAVpB,KAAP;AAYD,GAjBoB,CAArB;AAkBD,CAnBM;AAqBP,IAAIE,oBAAoB,GAAG5B,eAAe,CAAC2B,SAAD,EAAY,EAAZ,CAA1C;AACA,IAAIE,cAAc,GAAGX,wBAAwB,CAAC,YAAY,CAAE,CAAf,CAAxB,CAAyCU,oBAAzC,CAArB;AAEA,OAAO,IAAIE,eAAe,GAAGjC,kBAAkB,CAACgC,cAAD,CAAxC","sourcesContent":["import React from 'react';\nimport createReactContext from 'create-react-context';\nimport { createSelector } from 'reselect';\nimport { defaultTranslateOptions } from './localize';\nimport { localizeReducer, getTranslate, initialize, addTranslation, addTranslationForLanguage, setActiveLanguage, getLanguages, getActiveLanguage, getOptions } from './localize';\n\nvar dispatchInitialize = function dispatchInitialize(dispatch) {\n  return function (payload) {\n    return dispatch(initialize(payload));\n  };\n};\n\nvar dispatchAddTranslation = function dispatchAddTranslation(dispatch) {\n  return function (translation) {\n    return dispatch(addTranslation(translation));\n  };\n};\n\nvar dispatchAddTranslationForLanguage = function dispatchAddTranslationForLanguage(dispatch) {\n  return function (translation, language) {\n    return dispatch(addTranslationForLanguage(translation, language));\n  };\n};\n\nvar dispatchSetActiveLanguage = function dispatchSetActiveLanguage(dispatch) {\n  return function (languageCode) {\n    return dispatch(setActiveLanguage(languageCode));\n  };\n};\n\nexport var getContextPropsFromState = function getContextPropsFromState(dispatch) {\n  return createSelector(getTranslate, getLanguages, getActiveLanguage, getOptions, function (translate, languages, activeLanguage, options) {\n    var defaultLanguage = options.defaultLanguage || languages[0] && languages[0].code;\n    var renderToStaticMarkup = options.renderToStaticMarkup;\n    var ignoreTranslateChildren = options.ignoreTranslateChildren !== undefined ? options.ignoreTranslateChildren : defaultTranslateOptions.ignoreTranslateChildren;\n\n    return {\n      translate: translate,\n      languages: languages,\n      defaultLanguage: defaultLanguage,\n      activeLanguage: activeLanguage,\n      initialize: dispatchInitialize(dispatch),\n      addTranslation: dispatchAddTranslation(dispatch),\n      addTranslationForLanguage: dispatchAddTranslationForLanguage(dispatch),\n      setActiveLanguage: dispatchSetActiveLanguage(dispatch),\n      renderToStaticMarkup: renderToStaticMarkup,\n      ignoreTranslateChildren: ignoreTranslateChildren\n    };\n  });\n};\n\nvar defaultLocalizeState = localizeReducer(undefined, {});\nvar defaultContext = getContextPropsFromState(function () {})(defaultLocalizeState);\n\nexport var LocalizeContext = createReactContext(defaultContext);"]},"metadata":{},"sourceType":"module"}