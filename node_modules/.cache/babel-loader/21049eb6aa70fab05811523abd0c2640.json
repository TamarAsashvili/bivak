{"ast":null,"code":"var _jsxFileName = \"/home/mediamonster/Desktop/tamar/flymap/freenature/src/components/Header.jsx\";\nimport React, { Component } from \"react\";\nimport freenature from \"../image/freenature.png\";\nimport { Card, Col, Image, Row, Nav, Navbar, Button } from \"react-bootstrap\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { withLocalize } from \"react-localize-redux\";\nimport globalTranslations from \"../components/en/language.json\";\nimport LanguageToggle from \"../components/en/LanguageToggle\";\nimport { Translate } from \"react-localize-redux\";\nimport Example from '../components/toolTips/Tooltips';\nimport ExampleWater from '../components/toolTips/ToolWater';\nimport ExampleFire from '../components/toolTips/ToolFire';\nimport DogT from '../components/toolTips/DogT';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.props.initialize({\n      languages: [{\n        name: \"English\",\n        code: \"en\"\n      }, {\n        name: \"Dutch\",\n        code: \"du\"\n      }, {\n        name: \"French\",\n        code: \"fr\"\n      }],\n      translation: globalTranslations,\n      options: {\n        renderToStaticMarkup\n      }\n    });\n    this.props.addTranslation(globalTranslations);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        border: \"3px #138086 solid\",\n        padding: \"4px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: {\n        span: 6,\n        offset: 3\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Image, {\n      src: freenature,\n      alt: \"name for website\",\n      style: {\n        marginLeft: '100px',\n        padding: \"0px\",\n        width: \"400px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })))), React.createElement(Navbar, {\n      bg: \"light\",\n      expand: \"lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Navbar.Toggle, {\n      \"aria-controls\": \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Navbar.Collapse, {\n      id: \"basic-navbar-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      className: \"mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"outline-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" ALL zones\")), React.createElement(Nav.Link, {\n      href: \"/water\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(ExampleWater, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Nav.Link, {\n      href: \"/toilets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Example, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })), React.createElement(Nav.Link, {\n      href: \"/fire\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(ExampleFire, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(Nav.Link, {\n      href: \"/dog\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(DogT, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))), React.createElement(Nav.Link, {\n      href: \"/gallery\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Gallery\"), React.createElement(LanguageToggle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Translate, {\n      id: \"menu.title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Depending on the owner of the site on which a bivouac zone is located, there may be some limitations.\"))));\n  }\n\n}\n\nexport default withLocalize(Header);","map":{"version":3,"sources":["/home/mediamonster/Desktop/tamar/flymap/freenature/src/components/Header.jsx"],"names":["React","Component","freenature","Card","Col","Image","Row","Nav","Navbar","Button","renderToStaticMarkup","withLocalize","globalTranslations","LanguageToggle","Translate","Example","ExampleWater","ExampleFire","DogT","Header","constructor","props","initialize","languages","name","code","translation","options","addTranslation","render","border","padding","span","offset","marginLeft","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport freenature from \"../image/freenature.png\";\nimport { Card, Col, Image, Row, Nav, Navbar, Button } from \"react-bootstrap\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { withLocalize } from \"react-localize-redux\";\nimport globalTranslations from \"../components/en/language.json\";\nimport LanguageToggle from \"../components/en/LanguageToggle\";\nimport { Translate } from \"react-localize-redux\";\nimport Example from '../components/toolTips/Tooltips';\nimport ExampleWater from '../components/toolTips/ToolWater';\nimport ExampleFire from '../components/toolTips/ToolFire';\nimport DogT from '../components/toolTips/DogT';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.props.initialize({\n      languages: [\n        { name: \"English\", code: \"en\" },\n        { name: \"Dutch\", code: \"du\" },\n        { name: \"French\", code: \"fr\" }\n      ],\n      translation: globalTranslations,\n      options: { renderToStaticMarkup }\n    });\n\n    this.props.addTranslation(globalTranslations);\n  }\n\n  render() {\n    return (\n      <div>\n        <Card style={{ border: \"3px #138086 solid\", padding: \"4px\" }}>\n          <Row>\n\n            <Col md={{ span: 6, offset: 3 }}>\n              <Nav.Link href=\"/\">\n                <Image\n                  src={freenature}\n                  alt=\"name for website\"\n                  style={{ marginLeft: '100px', padding: \"0px\", width: \"400px\" }}\n                ></Image>\n              </Nav.Link>\n            </Col>\n          </Row>\n\n          <Navbar bg=\"light\" expand=\"lg\">\n\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/\">\n                  <Button variant=\"outline-info\"> ALL zones</Button>\n                </Nav.Link>\n                <Nav.Link href=\"/water\">\n                  <ExampleWater />\n                </Nav.Link>\n                <Nav.Link href=\"/toilets\">\n                  <Example />\n                </Nav.Link>\n                <Nav.Link href=\"/fire\">\n                  <ExampleFire />\n                </Nav.Link>\n                <Nav.Link href=\"/dog\">\n                  <DogT />\n                </Nav.Link>\n              </Nav>\n\n\n\n              <Nav.Link href=\"/gallery\">\n                Gallery\n              </Nav.Link>\n              <LanguageToggle />\n            </Navbar.Collapse>\n\n          </Navbar>\n\n          <p>\n            <Translate id=\"menu.title\">\n              Depending on the owner of the site on which a bivouac zone is\n              located, there may be some limitations.\n            </Translate>\n          </p>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default withLocalize(Header);\n"]},"metadata":{},"sourceType":"module"}