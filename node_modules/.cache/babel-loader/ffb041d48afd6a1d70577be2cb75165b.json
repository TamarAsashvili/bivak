{"ast":null,"code":"var _jsxFileName = \"/home/mediamonster/Desktop/tamar/flymap/freenature/src/components/WC/WcList.jsx\";\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nModal.setAppElement('#root');\nModal.defaultStyles.overlay.backgroundColor = 'rgba(0, 0, 0, .5)';\n\nclass WcList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderClass = classItem => {\n      return React.createElement(\"li\", {\n        onClick: () => this.props.selectClass(classItem),\n        className: \"class-list__item\",\n        key: classItem.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Class number \", classItem.name);\n    };\n\n    this.handleInputChanged = event => {\n      this.setState({\n        className: event.target.value\n      });\n    };\n\n    this.handleAddClass = async event => {\n      event.preventDefault();\n      const className = this.state.className;\n      this.setState({\n        addingNewClassOnServer: true\n      });\n      fetch('http://localhost:3001/classes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: className\n        })\n      }).then(r => r.json()).then(newlyAddedClass => {\n        this.props.addNewClass(newlyAddedClass);\n        this.setState({\n          addingNewClassOnServer: false\n        });\n        this.closeClassModal();\n      });\n    };\n\n    this.toggleClassModal = () => {\n      this.setState(prevState => ({\n        coachIsAddingClass: !prevState.coachIsAddingClass\n      }));\n    };\n\n    this.closeClassModal = () => {\n      this.setState({\n        coachIsAddingClass: false\n      });\n    };\n\n    this.state = {\n      className: '',\n      coachIsAddingClass: false,\n      addingNewClassOnServer: false\n    };\n  }\n\n  render() {\n    let $classes;\n\n    if (this.props.classesAreLoading) {\n      $classes = 'Loading...';\n    } else {\n      $classes = this.props.classes.map(this.renderClass);\n    }\n\n    return React.createElement(\"div\", {\n      className: \"class-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      isOpen: this.state.coachIsAddingClass,\n      onRequestClose: this.closeClassModal,\n      contentLabel: \"Add your new HackYourFuture class\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleAddClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleInputChanged,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add your shiny new class\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), this.state.addingNewClassOnServer && React.createElement(\"span\", {\n      className: \"loader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"loader-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })))), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, $classes), React.createElement(\"button\", {\n      className: \"class-list__add\",\n      onClick: this.toggleClassModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"+ Add new\"));\n  }\n\n}\n\nWcList.propTypes = {};\nexport default WcList;","map":{"version":3,"sources":["/home/mediamonster/Desktop/tamar/flymap/freenature/src/components/WC/WcList.jsx"],"names":["React","Component","Modal","setAppElement","defaultStyles","overlay","backgroundColor","WcList","constructor","props","renderClass","classItem","selectClass","name","handleInputChanged","event","setState","className","target","value","handleAddClass","preventDefault","state","addingNewClassOnServer","fetch","method","headers","body","JSON","stringify","then","r","json","newlyAddedClass","addNewClass","closeClassModal","toggleClassModal","prevState","coachIsAddingClass","render","$classes","classesAreLoading","classes","map","propTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-modal';\n\n\nModal.setAppElement('#root');\nModal.defaultStyles.overlay.backgroundColor = 'rgba(0, 0, 0, .5)';\n\nclass WcList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            className: '',\n            coachIsAddingClass: false,\n            addingNewClassOnServer: false\n        };\n    }\n\n    renderClass = classItem => {\n        return (\n            <li\n                onClick={() => this.props.selectClass(classItem)}\n                className=\"class-list__item\"\n                key={classItem.name}\n            >\n                Class number {classItem.name}\n            </li>\n        );\n    };\n\n    handleInputChanged = event => {\n        this.setState({ className: event.target.value });\n    };\n\n    handleAddClass = async event => {\n        event.preventDefault();\n\n        const { className } = this.state;\n        this.setState({ addingNewClassOnServer: true });\n        fetch('http://localhost:3001/classes', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ name: className })\n        })\n            .then(r => r.json())\n            .then(newlyAddedClass => {\n                this.props.addNewClass(newlyAddedClass);\n                this.setState({ addingNewClassOnServer: false });\n                this.closeClassModal();\n            });\n    };\n\n    toggleClassModal = () => {\n        this.setState(prevState => ({ coachIsAddingClass: !prevState.coachIsAddingClass }));\n    };\n\n    closeClassModal = () => {\n        this.setState({ coachIsAddingClass: false });\n    };\n\n    render() {\n        let $classes;\n\n        if (this.props.classesAreLoading) {\n            $classes = 'Loading...';\n        } else {\n            $classes = this.props.classes.map(this.renderClass);\n        }\n\n        return (\n            <div className=\"class-list\">\n                <Modal\n                    isOpen={this.state.coachIsAddingClass}\n                    onRequestClose={this.closeClassModal}\n                    contentLabel=\"Add your new HackYourFuture class\"\n                >\n                    <form onSubmit={this.handleAddClass}>\n                        <input onChange={this.handleInputChanged} type=\"text\" />\n                        <input type=\"submit\" value=\"Add your shiny new class\" />\n                        {this.state.addingNewClassOnServer && (\n                            <span className=\"loader\">\n                                <span className=\"loader-inner\"></span>\n                            </span>\n                        )}\n                    </form>\n                </Modal>\n                <ul>{$classes}</ul>\n                <button className=\"class-list__add\" onClick={this.toggleClassModal}>\n                    + Add new\n        </button>\n            </div>\n        );\n    }\n}\n\nWcList.propTypes = {};\n\nexport default WcList;"]},"metadata":{},"sourceType":"module"}