{"ast":null,"code":"var _jsxFileName = \"/home/mediamonster/Desktop/tamar/flymap/freenature/src/components/Dog.jsx\";\nimport React from 'react';\nimport { Map as LeafletMap, GeoJSON, TileLayer, Popup } from 'react-leaflet';\nimport Modal from './Modal';\nimport bivakzones from './bivakzones.json';\n\nclass Marker extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: 50.502,\n      lng: 4.34878\n    };\n  }\n\n  render() {\n    const position = [this.state.lat, this.state.lng];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(LeafletMap, {\n      center: position,\n      zoom: 8,\n      maxZoom: 19,\n      attributionControl: true,\n      zoomControl: true,\n      doubleClickZoom: true,\n      scrollWheelZoom: true,\n      dragging: true,\n      animate: true,\n      easeLinearity: 0.35,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      url: \"https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=CrxeqLRPyjGPIdZII2Ej\",\n      attribution: \"\\xA9 <a href=\\\"https://www.maptiler.com/copyright/\\\">OpenStreetMap</a>\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), bivakzones.features.filter(bivak => bivak.properties.dog === 'yes').map(bivak => {\n      if (bivak.geometry.type === 'Point') {\n        return bivak;\n      } else {\n        bivak.geometry.coordinates = bivak.geometry.coordinates[0][0];\n        bivak.geometry.type = 'Point';\n        return bivak;\n      }\n    }).map(bivak => React.createElement(GeoJSON, {\n      key: bivak.id,\n      data: bivak,\n      style: () => ({\n        color: '#4a83ec',\n        weight: 0.5,\n        fillColor: \"#1a1d62\",\n        fillOpacity: 1\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Popup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      bivakzone: bivak,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Marker;","map":{"version":3,"sources":["/home/mediamonster/Desktop/tamar/flymap/freenature/src/components/Dog.jsx"],"names":["React","Map","LeafletMap","GeoJSON","TileLayer","Popup","Modal","bivakzones","Marker","Component","state","lat","lng","render","position","features","filter","bivak","properties","dog","map","geometry","type","coordinates","id","color","weight","fillColor","fillOpacity"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAG,IAAIC,UAAhB,EAA4BC,OAA5B,EAAqCC,SAArC,EAAgDC,KAAhD,QAA6D,eAA7D;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAGA,MAAMC,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACJC,MAAAA,GAAG,EAAE,MADD;AAEJC,MAAAA,GAAG,EAAE;AAFD,KADyB;AAAA;;AAMjCC,EAAAA,MAAM,GAAG;AACL,UAAMC,QAAQ,GAAG,CAAC,KAAKJ,KAAL,CAAWC,GAAZ,EAAiB,KAAKD,KAAL,CAAWE,GAA5B,CAAjB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,UAAD;AACI,MAAA,MAAM,EAAEE,QADZ;AAEI,MAAA,IAAI,EAAE,CAFV;AAGI,MAAA,OAAO,EAAE,EAHb;AAII,MAAA,kBAAkB,EAAE,IAJxB;AAKI,MAAA,WAAW,EAAE,IALjB;AAMI,MAAA,eAAe,EAAE,IANrB;AAOI,MAAA,eAAe,EAAE,IAPrB;AAQI,MAAA,QAAQ,EAAE,IARd;AASI,MAAA,OAAO,EAAE,IATb;AAUI,MAAA,aAAa,EAAE,IAVnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYI,oBAAC,SAAD;AAAW,MAAA,GAAG,EAAC,gFAAf;AACI,MAAA,WAAW,EAAC,wEADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,EAgBQP,UAAU,CAACQ,QAAX,CACKC,MADL,CACaC,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,GAAjB,KAAyB,KADhD,EAEKC,GAFL,CAEUH,KAAD,IAAW;AACZ,UAAIA,KAAK,CAACI,QAAN,CAAeC,IAAf,KAAwB,OAA5B,EAAqC;AACjC,eAAQL,KAAR;AAEH,OAHD,MAGO;AACHA,QAAAA,KAAK,CAACI,QAAN,CAAeE,WAAf,GACIN,KAAK,CAACI,QAAN,CAAeE,WAAf,CAA2B,CAA3B,EAA8B,CAA9B,CADJ;AAEAN,QAAAA,KAAK,CAACI,QAAN,CAAeC,IAAf,GAAsB,OAAtB;AACA,eAAQL,KAAR;AACH;AACJ,KAZL,EAaKG,GAbL,CAaUH,KAAD,IACD,oBAAC,OAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACO,EADf;AAEI,MAAA,IAAI,EAAEP,KAFV;AAGI,MAAA,KAAK,EAAE,OAAO;AACVQ,QAAAA,KAAK,EAAE,SADG;AAEVC,QAAAA,MAAM,EAAE,GAFE;AAGVC,QAAAA,SAAS,EAAE,SAHD;AAIVC,QAAAA,WAAW,EAAE;AAJH,OAAP,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEX,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,CAdR,CAhBR,CAFJ,CADJ;AAmDH;;AA3DgC;;AA8DrC,eAAeT,MAAf","sourcesContent":["import React from 'react';\nimport { Map as LeafletMap, GeoJSON, TileLayer, Popup } from 'react-leaflet';\nimport Modal from './Modal';\nimport bivakzones from './bivakzones.json';\n\n\nclass Marker extends React.Component {\n    state = {\n        lat: 50.502,\n        lng: 4.34878,\n    };\n\n    render() {\n        const position = [this.state.lat, this.state.lng]\n        return (\n            <div>\n\n                <LeafletMap\n                    center={position}\n                    zoom={8}\n                    maxZoom={19}\n                    attributionControl={true}\n                    zoomControl={true}\n                    doubleClickZoom={true}\n                    scrollWheelZoom={true}\n                    dragging={true}\n                    animate={true}\n                    easeLinearity={0.35}\n                >\n                    <TileLayer url=\"https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?key=CrxeqLRPyjGPIdZII2Ej\"\n                        attribution=\"&copy; <a href=&quot;https://www.maptiler.com/copyright/&quot;>OpenStreetMap</a>\"\n                    />\n                    {\n                        bivakzones.features\n                            .filter((bivak) => bivak.properties.dog === 'yes')\n                            .map((bivak) => {\n                                if (bivak.geometry.type === 'Point') {\n                                    return (bivak)\n\n                                } else {\n                                    bivak.geometry.coordinates =\n                                        bivak.geometry.coordinates[0][0]\n                                    bivak.geometry.type = 'Point'\n                                    return (bivak)\n                                }\n                            })\n                            .map((bivak) => (\n                                <GeoJSON\n                                    key={bivak.id}\n                                    data={bivak}\n                                    style={() => ({\n                                        color: '#4a83ec',\n                                        weight: 0.5,\n                                        fillColor: \"#1a1d62\",\n                                        fillOpacity: 1,\n                                    })}>\n                                    <Popup>\n                                        <Modal bivakzone={bivak} />\n                                    </Popup>\n                                </GeoJSON>\n                            ))\n                    }\n                </LeafletMap>\n            </div>\n        )\n    }\n}\n\nexport default Marker"]},"metadata":{},"sourceType":"module"}