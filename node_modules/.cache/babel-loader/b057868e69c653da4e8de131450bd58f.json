{"ast":null,"code":"var _jsxFileName = \"/home/mediamonster/Desktop/tamar/flymap/freenature/src/components/en/LanguageToggle.jsx\";\nimport React from \"react\";\nimport { withLocalize } from \"react-localize-redux\";\nimport { Button } from 'react-bootstrap';\n\nconst LanguageToggle = ({\n  languages,\n  activeLanguage,\n  setActiveLanguage\n}) => React.createElement(\"ul\", {\n  className: \"selector\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}, languages.map(lang => React.createElement(\"li\", {\n  key: lang.code,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, console.log(activeLanguage), React.createElement(Button, {\n  onClick: () => setActiveLanguage(lang.code),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, lang.name), \"hwlelelellelel\")));\n\nexport default withLocalize(LanguageToggle);","map":{"version":3,"sources":["/home/mediamonster/Desktop/tamar/flymap/freenature/src/components/en/LanguageToggle.jsx"],"names":["React","withLocalize","Button","LanguageToggle","languages","activeLanguage","setActiveLanguage","map","lang","code","console","log","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,cAAb;AAA6BC,EAAAA;AAA7B,CAAD,KACnB;AAAI,EAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKF,SAAS,CAACG,GAAV,CAAcC,IAAI,IACf;AAAI,EAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKC,OAAO,CAACC,GAAR,CAAYN,cAAZ,CADL,EAEI,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAE,MAAMC,iBAAiB,CAACE,IAAI,CAACC,IAAN,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKD,IAAI,CAACI,IADV,CAFJ,mBADH,CADL,CADJ;;AAcA,eAAeX,YAAY,CAACE,cAAD,CAA3B","sourcesContent":["import React from \"react\";\nimport { withLocalize } from \"react-localize-redux\";\nimport { Button } from 'react-bootstrap';\n\nconst LanguageToggle = ({ languages, activeLanguage, setActiveLanguage }) => (\n    <ul className=\"selector\">\n        {languages.map(lang => (\n            <li key={lang.code}>\n                {console.log(activeLanguage)}\n                <Button onClick={() => setActiveLanguage(lang.code)}>\n                    {lang.name}\n                </Button>\n                hwlelelellelel\n            </li>\n        ))}\n    </ul>\n);\n\nexport default withLocalize(LanguageToggle);"]},"metadata":{},"sourceType":"module"}