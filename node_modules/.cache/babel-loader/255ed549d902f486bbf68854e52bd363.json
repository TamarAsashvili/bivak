{"ast":null,"code":"var _jsxFileName = \"/home/mediamonster/Desktop/tamar/flymap/freenature/src/components/Modal.jsx\";\nimport React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport getFeature from \"./filterer\";\nconst features = [\"opening_hours\", \"reservation\", \"openfire\", \"drinking_water\", \"toilets\", \"dog\"]; //const images = ['image', 'image:1', 'image:2', 'image:3', 'image:4']\n\nclass Modal extends Component {\n  render() {\n    return React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.bivakzone.properties.name), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, features.map(feature => {\n      const result = getFeature(this.props.bivakzone, feature);\n\n      if (Object.keys(result).length !== 0) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, Object.entries(result).map(entry => {\n          if (entry[0] === \"openfire\" && entry[1] === \"yes\") {\n            return React.createElement(\"i\", {\n              className: \"fas fa-fire\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27\n              },\n              __self: this\n            });\n          } else if (entry[0] === \"openfire\" && entry[1] === \"no\") {\n            return React.createElement(\"span\", {\n              className: \"fa-stack fa-1x\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-fire fa-stack-1x\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 31\n              },\n              __self: this\n            }), React.createElement(\"i\", {\n              className: \"fas fa-ban fa-stack-2x\",\n              style: {\n                color: \"Tomato\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 32\n              },\n              __self: this\n            }));\n          } else if (entry[0] === \"drinking_water\" && entry[1] === \"no\") {\n            return React.createElement(\"span\", {\n              className: \"fa-stack fa-1x\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-glass-whiskey fa-stack-1x\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44\n              },\n              __self: this\n            }), React.createElement(\"i\", {\n              className: \"fas fa-ban fa-stack-2x\",\n              style: {\n                color: \"Tomato\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45\n              },\n              __self: this\n            }));\n          } else if (entry[0] === \"drinking_water\" && entry[1] === \"yes\") {\n            return React.createElement(\"i\", {\n              className: \"fas fa-glass-whiskey\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55\n              },\n              __self: this\n            });\n          } else if (entry[0] === \"toilets\" && entry[1] === \"yes\") {\n            return React.createElement(\"i\", {\n              className: \"fas fa-toilet\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 57\n              },\n              __self: this\n            });\n          } else if (entry[0] === \"toilets\" && entry[1] === \"no\") {\n            return React.createElement(\"span\", {\n              className: \"fa-stack fa-1x\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-toilet fa-stack-1x\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }), React.createElement(\"i\", {\n              className: \"fas fa-ban fa-stack-2x\",\n              style: {\n                color: \"Tomato\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 62\n              },\n              __self: this\n            }));\n          } else if (entry[0] === \"dog\" && entry[1] === \"yes\") {\n            return React.createElement(\"i\", {\n              className: \"fas fa-dog\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            });\n          } else if (entry[0] === \"dog\" && entry[1] === \"no\") {\n            return React.createElement(\"span\", {\n              className: \"fa-stack fa-1x\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74\n              },\n              __self: this\n            }, React.createElement(\"i\", {\n              className: \"fas fa-dog fa-stack-1x\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }), React.createElement(\"i\", {\n              className: \"fas fa-ban fa-stack-2x\",\n              style: {\n                color: \"Tomato\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }));\n          } else if (Object.keys(result).length !== 0) {\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 95\n              },\n              __self: this\n            }, Object.entries(result).map(entry => entry[0] + \": \" + entry[1]));\n          }\n        }));\n      } else {\n        return null;\n      }\n    }))));\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["/home/mediamonster/Desktop/tamar/flymap/freenature/src/components/Modal.jsx"],"names":["React","Component","Card","getFeature","features","Modal","render","props","bivakzone","properties","name","map","feature","result","Object","keys","length","entries","entry","color"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport getFeature from \"./filterer\";\nconst features = [\n  \"opening_hours\",\n  \"reservation\",\n  \"openfire\",\n  \"drinking_water\",\n  \"toilets\",\n  \"dog\"\n];\n//const images = ['image', 'image:1', 'image:2', 'image:3', 'image:4']\nclass Modal extends Component {\n  render() {\n    return (\n      <Card>\n        <Card.Body>\n          <Card.Title>{this.props.bivakzone.properties.name}</Card.Title>\n          <div>\n            {features.map(feature => {\n              const result = getFeature(this.props.bivakzone, feature);\n              if (Object.keys(result).length !== 0) {\n                return (\n                  <div>\n                    {Object.entries(result).map((entry) => {\n                      if (entry[0] === \"openfire\" && entry[1] === \"yes\") {\n                        return <i className=\"fas fa-fire\"></i>;\n                      } else if (entry[0] === \"openfire\" && entry[1] === \"no\") {\n                        return (\n                          <span className=\"fa-stack fa-1x\">\n                            <i className=\"fas fa-fire fa-stack-1x\"></i>\n                            <i\n                              className=\"fas fa-ban fa-stack-2x\"\n                              style={{ color: \"Tomato\" }}\n                            ></i>\n                          </span>\n                        );\n                      } else if (\n                        entry[0] === \"drinking_water\" &&\n                        entry[1] === \"no\"\n                      ) {\n                        return (\n                          <span className=\"fa-stack fa-1x\">\n                            <i className=\"fas fa-glass-whiskey fa-stack-1x\"></i>\n                            <i\n                              className=\"fas fa-ban fa-stack-2x\"\n                              style={{ color: \"Tomato\" }}\n                            ></i>\n                          </span>\n                        );\n                      } else if (\n                        entry[0] === \"drinking_water\" &&\n                        entry[1] === \"yes\"\n                      ) {\n                        return <i className=\"fas fa-glass-whiskey\"></i>;\n                      } else if (entry[0] === \"toilets\" && entry[1] === \"yes\") {\n                        return <i className=\"fas fa-toilet\"></i>;\n                      } else if (entry[0] === \"toilets\" && entry[1] === \"no\") {\n                        return (\n                          <span className=\"fa-stack fa-1x\">\n                            <i className=\"fas fa-toilet fa-stack-1x\"></i>\n                            <i\n                              className=\"fas fa-ban fa-stack-2x\"\n                              style={{ color: \"Tomato\" }}\n                            ></i>\n                          </span>\n                        );\n                      }\n\n                      else if (entry[0] === \"dog\" && entry[1] === \"yes\") {\n                        return <i className=\"fas fa-dog\"></i>;\n                      } else if (entry[0] === \"dog\" && entry[1] === \"no\") {\n                        return (\n                          <span className=\"fa-stack fa-1x\">\n                            <i className=\"fas fa-dog fa-stack-1x\"></i>\n                            <i\n                              className=\"fas fa-ban fa-stack-2x\"\n                              style={{ color: \"Tomato\" }}\n                            ></i>\n                          </span>\n                        );\n                      }\n\n\n\n\n\n\n\n\n\n\n                      else if (Object.keys(result).length !== 0) {\n                        return (\n                          <div>\n                            {Object.entries(result).map(\n                              entry => entry[0] + \": \" + entry[1]\n                            )}\n                          </div>\n                        );\n                      }\n                    })}\n                  </div>\n                );\n              } else { return null; }\n            })}\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}